{"version":3,"sources":["home.js"],"names":[],"mappingsfile":"../main.js","sourcesContent":["\n\n\n\n\nclass Song {\n    constructor(title,artist,duration, musicPath) {\n        this.title = title;\n        this.artist = artist;\n        this.duration = duration;\n        this.isPlaying = false;\n        this.musicPath = musicPath;\n        let linkTrue = false;\n        let srcPath = '';\n        \n    }\n    playSong() {\n        this.isPlaying = true;\n        this.linkTrue = true;\n        \n    }\n    stop() {\n        this.isPlaying = false;\n\n    }\n    toHTML() {\n        let htmlString = '<li';\n        htmlString += ' ';\n        \n        if(this.isPlaying) {\n            htmlString += 'class=\"music-artist-name current\"';\n            let currentLi = document.getElementsByClassName(\"current\"); \n        } \n        \n        htmlString += 'src=';\n        htmlString += this.musicPath;\n        htmlString += '>';\n        htmlString += '<span>';\n        htmlString += 'Song Name: ' + '\"' + this.title + '\"';\n        htmlString += '</span>';\n        htmlString += '<span>';\n        htmlString += 'Artist: ' + this.artist;\n        htmlString += '</span>';\n        htmlString += '<span>';\n        htmlString += this.duration;\n        htmlString += '</span>';\n        htmlString += '</li>';\n        \n        return htmlString;\n        \n        \n    }\n    \n}\n\n\n\n\nclass PlayList {\n    constructor() {\n        this.songs = [];\n        this.nowPlayingIndex = 0;\n        let srcPath;\n        let audioPath;\n        let playing = false;\n    }\n\n    add(song) {\n        this.songs.push(song);\n    }\n    playSong() {\n        let currentSong = this.songs[this.nowPlayingIndex];\n        currentSong.playSong();\n        var x = document.getElementsByTagName(\"LI\")[this.nowPlayingIndex].getAttribute('src');\n        this.srcPath  =  new Audio(x);\n         \n        if(!playing) {\n            this.srcPath.play();\n        }\n        \n    }\n    stop() {\n        let currentSong = this.songs[this.nowPlayingIndex];\n        currentSong.stop();\n        this.srcPath.pause();\n        this.playing = false;\n    }\n    next() {\n        this.stop();\n        this.nowPlayingIndex ++;\n        if(this.nowPlayingIndex === this.songs.length) {\n            this.nowPlayingIndex = 0;\n        }\n        this.playSong();\n    }\n    renderInElement(list) {\n        list.innerHTML = \"\";\n        for(let i = 0; i < this.songs.length; i++) {\n            list.innerHTML += this.songs[i].toHTML();\n        }\n    }\n    \n\n}\n\n\n\n\nlet playlist = new PlayList();\nlet letyougo = new Song('Let you go', 'MGK', '3:05', 'css/audio/LetYouGo.mp3');\nlet atmybest = new Song('At my best', 'MGK', '3:21', 'css/audio/AtMyBest.mp3');\nlet despacito = new Song('Despacito', 'Luis Fonsi', '4:42', 'css/audio/Despacito.mp3');\nlet americandreams = new Song('American Dreams', 'Papa Roach', '3:23', 'css/audio/AmericanDreams.mp3');\nlet faded = new Song('Faded', 'Alan Walker', '3:33', 'css/audio/faded.mp3');\n\nplaylist.add(letyougo);\nplaylist.add(atmybest);\nplaylist.add(despacito);\nplaylist.add(americandreams);\nplaylist.add(faded);\n\nvar playlistElement = document.getElementById('playlist')\n\nplaylist.renderInElement(playlistElement);\n\nlet clicked = false;\nlet playButton = document.getElementById('play');\nplayButton.onclick = (playing) => {\n    this.playing = false;\n    if(!this.clicked && !this.playing) {\n        playlist.playSong();\n        this.clicked = true;\n    }\n    playlist.renderInElement(playlistElement);\n    \n}\nlet nextButton = document.getElementById('next');\nnextButton.onclick = (playing) => {\n    this.playing = false;\n    playlist.next();\n    playlist.renderInElement(playlistElement);\n}\nlet stopButton = document.getElementById('stop');\nstopButton.onclick = (playing) => {\n    this.clicked = false;\n    playlist.stop();\n    this.playing = false;\n    playlist.renderInElement(playlistElement);\n    console.log(this.clicked);\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// function Playlist() {\n//   this.songs = [];\n//   this.nowPlayingIndex = 0;\n//   this.audio = new Audio('css/audio/LetYouGo.mp3');\n  \n// }\n\n\n\n// Playlist.prototype.add = function(song) {\n//   this.songs.push(song);\n// };\n\n// Playlist.prototype.play = function() {\n//   var currentSong = this.songs[this.nowPlayingIndex];\n//   var currentSongPath = this.songs.sourcePath;\n//   console.log(currentSongPath);\n//   currentSong.play();\n//   this.audio.play();\n  \n  \n// };\n\n// Playlist.prototype.stop = function(){\n//   var currentSong = this.songs[this.nowPlayingIndex];\n//   currentSong.stop();\n//   this.audio.pause();\n// };\n\n// Playlist.prototype.next = function() {\n//   this.stop();\n//   this.nowPlayingIndex++;\n//   if(this.nowPlayingIndex === this.songs.length) {\n//     this.nowPlayingIndex = 0;\n//   }\n//   this.play();\n// };\n\n// Playlist.prototype.renderInElement = function(list) {\n//     list.innerHTML = '';\n//     for(var i = 0; i < this.songs.length; i++ ) {\n//         list.innerHTML += this.songs[i].toHTML();\n//     }\n// };\n\n// function Song(title, duration, sourcePath) {\n//   this.title = title;\n//   this.duration = duration;\n//   this.sourcePath = sourcePath;\n//   this.isPlaying = false;\n// }\n\n// Song.prototype.play = function() {\n//   this.isPlaying = true;\n// };\n\n// Song.prototype.stop = function() {\n//   this.isPlaying = false;\n// };\n\n// Song.prototype.toHTML = function() {\n//     var htmlString = '<li';\n//     htmlString += ' ';\n//     if(this.isPlaying) {\n//         htmlString += 'class=\"music-artist-name current\"';\n//     }\n//     htmlString += '>';\n//     htmlString += '<span>';\n//     htmlString += this.title;\n//     htmlString += '</span>';\n//     htmlString += '<span>';\n//     htmlString += this.duration;\n//     htmlString += '</span>';\n//     htmlString += '</li>';\n//     return htmlString;\n// };\n\n// var playlist = new Playlist();\n\n// var letYouGo = new Song(\"Let You Go\", \"2:43\", 'css/audio/LetYouGo.mp3');\n// var atMyBest = new Song(\"At My Best\", \"3:19\", 'css/audio/AtMyBest.mp3');\n\n\n\n\n// playlist.add(letYouGo);\n// playlist.add(atMyBest);\n\n\n// Song.prototype.playSong = function() {\n//     var songToPlay = this.sourcePath;\n//     songToPlay.play()\n// }\n// var atMyBestURL = new Audio(atMyBest.sourcePath);\n\n\n\n// var playlistElement = document.getElementById(\"playlist\");\n\n// playlist.renderInElement(playlistElement);\n\n// var playButton = document.getElementById('play');\n// playButton.onclick = function() {\n//     playlist.play();\n//     // atMyBestURL.play();\n//     playlist.renderInElement(playlistElement);\n// }\n\n// var nextButton = document.getElementById('next');\n// nextButton.onclick = function() {\n//     playlist.next();\n//     playlist.renderInElement(playlistElement);\n// }\n\n// var stopButton = document.getElementById('stop');\n// stopButton.onclick = function() {\n//     playlist.stop();\n//     // atMyBestURL.pause();\n//     // atMyBestURL.currentTime = 0;\n//     playlist.renderInElement(playlistElement);\n// }\n\n\n// // function Dice(sides) {\n// //     this.sides = sides;\n// //     this.roll = function() {\n// //         let rolledNumber = Math.floor(Math.random() * this.sides) + 1;\n// //         return rolledNumber;\n// //     }\n// // }\n\n// // let sixSideDice = new Dice(6);\n\n// // console.log(sixSideDice.roll());\n\n// function Dice(sides) {\n//     this.sides = sides;\n// }\n\n// Dice.prototype.roll = function() {\n//     let rolledNumber = Math.floor(Math.random() * this.sides) + 1;\n//     return rolledNumber;\n// }\n\n// let sixSideDice = new Dice(6);\n\n// console.log(sixSideDice.roll())"]}